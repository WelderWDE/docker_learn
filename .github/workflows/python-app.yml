# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

on: pull_request

jobs:
  checkout_repo:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
            
      - name: Install Poetry
        run: |
          pip install poetry
          poetry config http-basic.jfrog ccsautomation FBMucDt36qZ8
        if: steps.cache-poetry.outputs.cache-hit != 'true'
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: poetry install --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'